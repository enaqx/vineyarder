/**
 * This is a node script that interrogates the app's React Router and builds
 * a static site based on the routes. The contents of the static pages will
 * be the same as that generated by the node server in server.js.
 */
'use strict';

// script assumes process.cwd() is the output directory
var outputDir = process.cwd();

require('node-jsx').install({ extension: '.jsx' });

var _ = require('lodash');
var React = require('react');
var Router = require('react-router');
var HeadParams = require('./lib/HeadParams');
var StaticTools = require('./lib/StaticTools');

var htmlComponent = React.createFactory(require('./components/HTML'));
var routes = require('./components/Routes');
var VineyarderRes = require('./assets/resources/VineyarderResources');


var pages = StaticTools.gather(routes);


// Write the sitemap with the pages we have so far
StaticTools.writeFile(outputDir, '/sitemap.xml',
  StaticTools.makeSitemap(pages, VineyarderRes.URL));

// Will hit the NotFound route and generate error.html
pages.push('/error.html');

var headParams = new HeadParams();

// Render each path
pages.forEach(function(page) {
  Router.run(routes, page, function(Handler, state) {
    console.log(page);
    var bodyElement = React.createFactory(Handler)({
      params: state.params,
      headParams: headParams,
      clientReady: false
    });

    var html = React.renderToStaticMarkup(htmlComponent({
      headParams: headParams,
      markup: React.renderToString(bodyElement)
    }));

    StaticTools.writeHtmlPage(outputDir, page, html);
  });
});
